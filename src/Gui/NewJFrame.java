/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import proyectointeligentesfinal.Graph;
import proyectointeligentesfinal.GraphReader;
import proyectointeligentesfinal.GraphSearch;
import proyectointeligentesfinal.HeuristicType;

/**
 *
 * @author USER
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new Gui.Panel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
public static void main(String args[]) {
    GraphReader reader = new GraphReader();
    Graph graph = reader.readGraphFromFile("src/files/camino2.txt");
    graph.newList(graph);

    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            Panel panel = new Panel();
            JFrame frame = new JFrame("Bomberman");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            panel.createLabelsFromGraph("src/files/camino2.txt");

            /**
             * Crear el JComboBox con los nombres de los algoritmos
             */
            String[] algorithmNames = {
                "UCS",
                "DFS",
                "BFS",
                "A estrella M",
                "A estrella E",
                "Beam M",
                "Beam E",
                "Hill M",
                "Hill E"
            };
            JComboBox<String> algorithmComboBox = new JComboBox<>(algorithmNames);
            algorithmComboBox.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String selectedAlgorithm = (String) algorithmComboBox.getSelectedItem();
                    Thread searchThread = new Thread(new Runnable() {
                        @Override
                        public void run() {
                            GraphSearch graphSearch = new GraphSearch(panel);
                            try {
                                switch (selectedAlgorithm) {
                                    case "UCS":
                                        graphSearch.ucs(graph, panel);
                                        break;
                                    case "DFS":
                                        graphSearch.search(graph, false, panel);
                                        break;
                                    case "BFS":
                                        graphSearch.search(graph, true, panel);
                                        break;
                                    case "A estrella M":
                                        graphSearch.aStar(graph, HeuristicType.MANHATTAN, panel);
                                        break;
                                    case "A estrella E":
                                        graphSearch.aStar(graph, HeuristicType.EUCLIDEAN, panel);
                                        break;
                                    case "Beam M":
                                        graphSearch.beamSearch(graph, 2, HeuristicType.MANHATTAN, panel);
                                        break;
                                    case "Beam E":
                                        graphSearch.beamSearch(graph, 2, HeuristicType.EUCLIDEAN, panel);
                                        break;
                                    case "Hill M":
                                        graphSearch.hillClimbing(graph, HeuristicType.MANHATTAN, panel);
                                        break;
                                    case "Hill E":
                                        graphSearch.hillClimbing(graph, HeuristicType.EUCLIDEAN, panel);
                                        break;
                                }
                            } catch (InterruptedException ex) {
                                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    });
                    searchThread.start();
                }
            });

            /**
             * Bot√≥n para reiniciar el panel
             */
            JButton resetButton = new JButton("Reiniciar");
            resetButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                }
            });

            JPanel buttonPanel = new JPanel();
            buttonPanel.add(resetButton);
            buttonPanel.add(algorithmComboBox);

            frame.getContentPane().setLayout(new BorderLayout());
            frame.getContentPane().add(buttonPanel, BorderLayout.NORTH);
            frame.getContentPane().add(panel, BorderLayout.CENTER);
            frame.pack();
            frame.setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Gui.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
